 <table className="w-full">
          <thead>
            {/* className="px-4 py-2 text-white bg-gray-800" */}
            <tr className="py-10 font-serif text-lg border shadow-xl text-green-800">
              {!selectedCategory && <th className="px-4 py-2">Category</th>}
              <th className="">Brand</th>
              <th className="px-4 py-4">Product Name</th>
              <th className="px-4 py-2 ">Variants</th>
              <th className="px-4 py-2 ">Product IMG</th>
              <th className="px-4 py-2 ">Status</th>
              <th className="px-4 py-2 ">Edit/Update</th>
              <th className="px-4 py-2 ">Delete</th>
              <th className="px-4 py-2 ">Questions</th>
            </tr>
          </thead>

          <tbody className="text-center">
            {/* Products when Category is selected */}
            {!productsDataLoading &&
              productsData.products
                .filter((product) => product.category.id === selectedCategory)
                .map((product, index) => (
                  <tr
                    key={`${product._id}-${index}`}
                    className={
                      index % 2 === 0 ? "bg-white" : "bg-gray-100 border"
                    }
                  >
                    {/* <td className="px-4 py-2">{product.category.name}</td> */}
                    <td className="px-4 py-2">{product.brand.name}</td>
                    <td className="px-4 py-2">{product.name}</td>
                    <td className="px-4 py-2">
                      <ul>
                        {product.category.name === "Mobile"
                          ? product.variants.map((variant, i) => (
                              <div
                                key={`${variant.id}-${i}`}
                                className="flex gap-2 justify-center"
                              >
                                <div className="">
                                  <label
                                    htmlFor="variantName"
                                    className="text-xs text-gray-500"
                                  >
                                    Variant Name
                                  </label>
                                  <li
                                    key={i + 23}
                                    className=""
                                    name="variantName"
                                  >
                                    {variant.name}
                                  </li>
                                </div>
                                <div>
                                  <label
                                    htmlFor="variantName"
                                    className="text-xs text-gray-500"
                                  >
                                    Variant Price
                                  </label>
                                  <li
                                    key={i + 77}
                                    className=""
                                    name="variantName"
                                  >
                                    {variant.price}
                                  </li>
                                </div>
                              </div>
                            ))
                          : product.variants.map((variant, i) => (
                              <div className="">
                                <label
                                  htmlFor="price"
                                  className="text-xs text-gray-500"
                                >
                                  Product Price
                                </label>
                                <li key={i + 78} className="" name="price">
                                  {variant.price}
                                </li>
                              </div>
                            ))}
                      </ul>
                    </td>
                    <td className="px-4 py-2">
                      <img
                        src={import.meta.env.VITE_APP_BASE_URL + product.image}
                        alt="CAT"
                        className="w-[60px] h-[60px] mx-auto "
                      />
                    </td>
                    <td className="px-4 py-2">{product.status}</td>
                    <td className="px-4 py-2">
                      <EditButton
                        location={`/admin/update-product/${product.id}`}
                      />
                    </td>
                    {/* DELETE */}
                    <td>
                      <button
                        onClick={() => handleDelete(product.id)}
                        className="bg-red-600 text-white px-3 py-2 rounded-md"
                      >
                        <MdDeleteForever className="text-2xl" />
                      </button>
                    </td>
                    <td className="px-4 py-2">
                      {/* Testing */}
                      {/* VALIDATE BUTTON */}
                      {product.category.name === "Mobile" ? (
                        <div>
                          <select
                            name=""
                            onChange={(e) =>
                              setDeductionSelected({
                                [product.id]: e.target.value,
                              })
                            }
                          >
                            <option value="">Variant</option>
                            {product.variantDeductions.map(
                              (variantDeduction, index) => (
                                <option
                                  key={`${variantDeduction.id}-${index}`}
                                  value={variantDeduction.variantName}
                                >
                                  {variantDeduction.variantName}
                                </option>
                              )
                            )}
                          </select>
                          {/* Testing END */}
                          {deductionSelected[product.id] && (
                            <Link
                              to={`/admin/products/product-questions/${
                                product.id
                              }?variant=${deductionSelected[product.id]}`}
                            >
                              <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold text-sm py-2 px-2 rounded">
                                Price Drop
                              </button>
                            </Link>
                          )}
                        </div>
                      ) : (
                        <div>
                          <Link
                            to={`/admin/products/product-questions/${
                              product.id
                            }?variant=${deductionSelected[product.id]}`}
                          >
                            <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold text-sm py-2 px-2 rounded">
                              Price Drop
                            </button>
                          </Link>
                        </div>
                      )}
                    </td>
                  </tr>
                ))}

            {/* Products when Category not selected */}
            {!productsDataLoading &&
              !selectedCategory &&
              productsData.products
                //   .filter((product) => product.category.id != selectedCategory)
                .map((product, index) => (
                  <tr
                    key={`${product._id}-${index}`}
                    className={
                      index % 2 === 0 ? "bg-white" : "bg-gray-100 border"
                    }
                  >
                    <td className="px-4 py-2">{product.category.name}</td>
                    <td className="px-4 py-2">{product.brand.name}</td>
                    <td className="px-4 py-2">{product.name}</td>
                    <td className="px-4 py-2">
                      <ul>
                        {product.category.name === "Mobile"
                          ? product.variants.map((variant, i) => (
                              <div
                                key={`${variant.id}-${i}`}
                                className="flex gap-2 justify-center"
                              >
                                <div className="">
                                  <label
                                    htmlFor="variantName"
                                    className="text-xs text-gray-500"
                                  >
                                    Variant Name
                                  </label>
                                  <li
                                    key={i + 23}
                                    className=""
                                    name="variantName"
                                  >
                                    {variant.name}
                                  </li>
                                </div>
                                <div>
                                  <label
                                    htmlFor="variantName"
                                    className="text-xs text-gray-500"
                                  >
                                    Variant Price
                                  </label>
                                  <li
                                    key={i + 77}
                                    className=""
                                    name="variantName"
                                  >
                                    {variant.price}
                                  </li>
                                </div>
                              </div>
                            ))
                          : product.variants.map((variant, i) => (
                              <div className="">
                                <label
                                  htmlFor="price"
                                  className="text-xs text-gray-500"
                                >
                                  Product Price
                                </label>
                                <li key={i + 78} className="" name="price">
                                  {variant.price}
                                </li>
                              </div>
                            ))}
                      </ul>
                    </td>
                    <td className="px-4 py-2">
                      <img
                        // src={"http://localhost:8000" + product.image}
                        src={import.meta.env.VITE_APP_BASE_URL + product.image}
                        alt="CAT"
                        className="w-[60px] h-[60px] mx-auto "
                      />
                    </td>
                    <td className="px-4 py-2">{product.status}</td>
                    {/* EDIT */}
                    <td className=" px-2 py-2">
                      <EditButton
                        location={`/admin/update-product/${product.id}`}
                      />
                    </td>
                    {/* DELETE */}
                    <td>
                      <button
                        onClick={() => handleDelete(product.id)}
                        className="bg-red-600 text-white px-3 py-2 rounded-md"
                      >
                        <MdDeleteForever className="text-2xl" />
                      </button>
                    </td>
                    <td className="px-4 py-2">
                      {/* Testing */}
                      {/* VALIDATE BUTTON */}
                      {product.category.name === "Mobile" ? (
                        <div>
                          <select
                            name=""
                            onChange={(e) =>
                              setDeductionSelected({
                                [product.id]: e.target.value,
                              })
                            }
                          >
                            <option value="">Variant</option>
                            {product.variantDeductions.map(
                              (variantDeduction, index) => (
                                <option
                                  key={`${variantDeduction._id}-${index}`}
                                  value={variantDeduction.variantName}
                                >
                                  {variantDeduction.variantName}
                                </option>
                              )
                            )}
                          </select>
                          {/* Testing END */}
                          {deductionSelected[product.id] && (
                            <Link
                              to={`/admin/products/product-questions/${
                                product.id
                              }?variant=${deductionSelected[product.id]}`}
                            >
                              <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold text-sm py-2 px-2 rounded">
                                Price Drop
                              </button>
                            </Link>
                          )}
                        </div>
                      ) : (
                        <div>
                          {/* {deductionSelected[product.id] && ( */}
                          <Link
                            to={`/admin/products/product-questions/${product.id}`}
                          >
                            <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold text-xs py-2 px-2 rounded">
                              Price Drop
                            </button>
                          </Link>
                          {/* )} */}
                        </div>
                      )}
                    </td>
                  </tr>
                ))}
          </tbody>
        </table>